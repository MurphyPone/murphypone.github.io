{"version":3,"sources":["webpack:///./src/components/landing-bio.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["Container","Object","styled_base_browser_esm","target","name","styles","OuterContainer","Description","NameHeader","propTypes","siteTitle","PropTypes","string","defaultProps","LandingBio","core_browser_esm","gatsby_browser_entry","query","render","data","site","siteMetadata","title","style","color","textDecoration","_1846427949","IndexPage","layout","seo","keywords","landing_bio","StaticQueryContext","React","createContext","StaticQueryDataRenderer","_ref","staticQueryData","finalData","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","a","Fragment","StaticQuery","props","children","Consumer","object","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","assign","json","shape","pathname","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_1__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","htmlAttributes","titleTemplate","content","property","author","concat","length","join","array","arrayOf","Content","NavLink","Link","HomeLink","SiteHeader","Header","to","Footer","Layout","react_default","header","layout_Content","react_social_icons","url","fgColor","bgColor","_755544856","node"],"mappings":"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","file":"component---src-pages-index-js-91937655b419db506b5e.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport styled from \"@emotion/styled\"\n\nconst Container = styled.div`\n  text-align: center;\n`\n\nconst OuterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n  height: 78vh;\n`\n\nconst Description = styled.p`\n  padding: 0;\n  margin-bottom: 1rem;\n  font-size: 1.4rem;\n`\n\nconst NameHeader = styled.h1`\n  font-size: 3.5rem;\n  margin-bottom: 0;\n  border-left: 3px solid rgba(102, 102, 255, 0.8);\n  border-top: 3px solid rgba(102, 102, 255, 0.8);\n  padding-top: .1em;\n  padding-left: .1em;\n  margin-bottom: 0.2em;\n`\n\nconst LandingBio = () => (\n  <StaticQuery\n    query={graphql`\n      query LandingSiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <OuterContainer>\n        <Container>\n          <NameHeader>{data.site.siteMetadata.title}</NameHeader>\n          <Description style={{color: 'rgb(102, 102, 255)'}}>Projects and <a style={{textDecoration: \"line-through\", color: \"rgba(102, 102, 255, 0.8)\"}}>shitposts</a> blog</Description>\n          <p>//TODO Create project card component</p>\n          <p>Because I promise I have worthwhile code to look at maybeÂ¿</p>\n        </Container>\n      </OuterContainer>\n    )}\n  />\n)\n\nNameHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nNameHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default LandingBio\n","import React from \"react\"\n\nimport LandingBio from \"../components/landing-bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO title=\"Home\" keywords={[`gatsby`, `application`, `react`]} />\n    <LandingBio />\n  </Layout>\n)\n\nexport default IndexPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { Link } from \"gatsby\"\nimport styled from \"@emotion/styled\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Content = styled.div`\n  max-width: 860px;\n  padding: 1rem 1.0875rem;\n  font-size: 1.2rem;\n`\n\nconst NavLink = styled(Link)`\n  color: black;\n  margin-left: 15px;\n  text-decoration: none;\n  display: inline-block;\n  position: relative;\n\n  ::after {\n    content: \"\";\n    position: absolute;\n    width: 100%;\n    transform: scaleX(0);\n    height: 2px;\n    bottom: 0;\n    left: 0;\n    background-color: rgba(102, 102, 255, 0.8);\n    transform-origin: bottom right;\n    transition: transform 0.4s cubic-bezier(0.86, 0, 0.07, 1);\n  }\n\n  :hover::after {\n    transform: scaleX(1);\n    transform-origin: bottom left;\n  }\n`\n\nconst HomeLink = styled(NavLink)`\n  margin-left: 0;\n`\n\nconst SiteHeader = styled.header`\n  background: transparent;\n  display: flex;\n  align-content: center;\n  justify-content: center;\n`\n\nconst Header = ({ siteTitle }) => (\n  <SiteHeader>\n    <Content>\n      <p>\n        <HomeLink to=\"/\">Projects</HomeLink>\n        <NavLink to=\"/blog\">Blog</NavLink>\n        <NavLink to=\"/about\">About</NavLink>\n      </p>\n    </Content>\n  </SiteHeader>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport styled from \"@emotion/styled\"\nimport { SocialIcon } from 'react-social-icons';\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Content = styled.div`\n  margin: 0 auto;\n  max-width: 860px;\n  padding: 0 1.0875rem 1rem;\n  padding-top: 0;\n`\n\nconst Footer = styled.footer`\n  display: flex;\n  justify-content: center;\n  border-top: 3px solid   rgb(102, 102, 255);\n`\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <Content>\n          <main>{children}</main>\n          <Footer>\n            <SocialIcon url=\"https://www.linkedin.com/in/petersmurphy7/\" target=\"_blank\" fgColor=\"#6666ff\" bgColor=\"#ffffff\" />\n            <SocialIcon url=\"http://github.com/murphypone\" target=\"_blank\" fgColor=\"#6666ff\" bgColor=\"#ffffff\" />\n            <SocialIcon url=\"http://twitter.com/petersmurphy7\" target=\"_blank\" fgColor=\"#6666ff\" bgColor=\"#ffffff\" />\n            <SocialIcon url=\"http://instagram.com/petersmurphy7\" target=\"_blank\" fgColor=\"#6666ff\" bgColor=\"#ffffff\" />\n            <SocialIcon url=\"http://youtube.com/plotsmurphy\" target=\"_blank\" fgColor=\"#6666ff\" bgColor=\"#ffffff\" />\n          </ Footer>\n        </Content>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}