{"version":3,"sources":["webpack:///./src/pages/blog.js"],"names":["Content","ArticleDate","MarkerHeader","ReadingTime","outlineStyle","borderLeft","borderBottom","marginBottom","paddingLeft","paddingTop","paddingBottom","IndexPage","data","title","allMarkdownRemark","edges","map","node","key","id","style","to","frontmatter","path","css","date","fields","readingTime","text","description","query"],"mappings":"oNAQMA,EAAO,2HAMPC,EAAW,kIAOXC,EAAY,iHAcZC,EAAW,kHAMXC,EAAe,CACnBC,WAAY,qCACZC,aAAc,qCACdC,aAAc,MACdC,YAAa,QACbC,WAAY,QACZC,cAAe,O,+DAgCFC,UA5BG,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACnB,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAKC,MAAM,SACX,YAACb,EAAD,KACA,0BAAQ,+BACLY,EAAKE,kBAAkBC,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAChC,mBAAKC,IAAKD,EAAKE,GAAIC,MAAOhB,GACxB,YAAC,OAAD,CACEiB,GAAIJ,EAAKK,YAAYC,KACrBC,IAAG,GAIH,YAACtB,EAAD,KAAee,EAAKK,YAAYT,MAAhC,KACA,uBACE,YAACZ,EAAD,KAAcgB,EAAKK,YAAYG,MAC/B,YAACtB,EAAD,WAAiBc,EAAKS,OAAOC,YAAYC,OAE3C,+BAAU,qBAAIX,EAAKK,YAAYO,sBAWtC,IAAMC,EAAK","file":"component---src-pages-blog-js-bd8bb043231b0c551eb3.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport { css } from \"@emotion/core\"\nimport styled from \"@emotion/styled\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst Content = styled.div`\n  margin: 0 auto;\n  max-width: 860px;\n  padding: 1.45rem 1.0875rem;\n`\n\nconst ArticleDate = styled.h5`\n  display: inline;\n  color: #606060;\n  margin-bottom: 15px;\n  margin-top: 15px;\n`\n\nconst MarkerHeader = styled.h3`\n  display: inline;\n  padding: 3px;\n  margin-bottom: 15px;\n  /*\n    -100deg,\n    rgba(26, 224, 204, 0.15),\n    rgba(102, 102, 255, 0.8) 100%,\n    rgba(26, 224, 204, 0.3)\n  );\n  border-radius: 0.25em 0 0 0.25em;\n  */\n`\n\nconst ReadingTime = styled.h5`\n  display: inline;\n  color: #606060;\n  margin-bottom: 15px;\n`\n\nconst outlineStyle = {\n  borderLeft: '3px solid rgba(102, 102, 255, 0.8)',\n  borderBottom: '3px solid rgba(102, 102, 255, 0.8)',\n  marginBottom: '1em',\n  paddingLeft: '0.5em',\n  paddingTop: '0.5em',\n  paddingBottom: '0em'\n\n};\n\nconst IndexPage = ({ data }) => {\n  return (\n    <Layout>\n      <SEO title=\"Blog\" />\n      <Content>\n      <center><h1>Blog</h1></center>\n        {data.allMarkdownRemark.edges.map(({ node }) => (\n          <div key={node.id} style={outlineStyle} >\n            <Link\n              to={node.frontmatter.path}\n              css={css`\n                text-decoration: none;\n                color: inherit;\n              `}>\n              <MarkerHeader>{node.frontmatter.title} </MarkerHeader>\n              <div>\n                <ArticleDate>{node.frontmatter.date}</ArticleDate>\n                <ReadingTime> - {node.fields.readingTime.text}</ReadingTime>\n              </div>\n              <p>Using: <i>{node.frontmatter.description}</i></p>\n            </Link>\n          </div>\n        ))}\n      </Content>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n\nexport const query = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n            path\n            description\n          }\n          fields {\n            slug\n            readingTime {\n              text\n            }\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}