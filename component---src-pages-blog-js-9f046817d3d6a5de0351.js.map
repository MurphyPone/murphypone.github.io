{"version":3,"sources":["webpack:///./src/pages/blog.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["Content","Object","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","target","name","styles","ArticleDate","MarkerHeader","ReadingTime","outlineStyle","borderLeft","borderBottom","marginBottom","paddingLeft","paddingTop","paddingBottom","IndexPage","_ref2","data","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_4__","_components_seo__WEBPACK_IMPORTED_MODULE_5__","title","allMarkdownRemark","edges","map","_ref3","node","key","id","style","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","frontmatter","path","css","_ref","date","fields","readingTime","text","description","query","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","render","finalData","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","a","Fragment","StaticQuery","props","children","Consumer","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","assign","json","shape","pathname","SEO","lang","meta","keywords","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_1__","metaDescription","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","htmlAttributes","titleTemplate","content","property","author","concat","length","join","defaultProps","array","arrayOf","styled_base_browser_esm","NavLink","Link","HomeLink","SiteHeader","Header","siteTitle","core_browser_esm","Footer","Layout","gatsby_browser_entry","react_default","header","layout_Content","react_social_icons","url","fgColor","bgColor","_755544856"],"mappings":"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","file":"component---src-pages-blog-js-9f046817d3d6a5de0351.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport { css } from \"@emotion/core\"\nimport styled from \"@emotion/styled\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst Content = styled.div`\n  margin: 0 auto;\n  max-width: 860px;\n  padding: 1.45rem 1.0875rem;\n`\n\nconst ArticleDate = styled.h5`\n  display: inline;\n  color: #606060;\n  margin-bottom: 15px;\n  margin-top: 15px;\n`\n\nconst MarkerHeader = styled.h3`\n  display: inline;\n  padding: 3px;\n  margin-bottom: 15px;\n  /*\n    -100deg,\n    rgba(26, 224, 204, 0.15),\n    rgba(102, 102, 255, 0.8) 100%,\n    rgba(26, 224, 204, 0.3)\n  );\n  border-radius: 0.25em 0 0 0.25em;\n  */\n`\n\nconst ReadingTime = styled.h5`\n  display: inline;\n  color: #606060;\n  margin-bottom: 15px;\n`\n\nconst outlineStyle = {\n  borderLeft: '3px solid rgba(102, 102, 255, 0.8)',\n  borderBottom: '3px solid rgba(102, 102, 255, 0.8)',\n  marginBottom: '1em',\n  paddingLeft: '0.5em',\n  paddingTop: '0.5em',\n  paddingBottom: '0em'\n\n};\n\nconst IndexPage = ({ data }) => {\n  return (\n    <Layout>\n      <SEO title=\"Blog\" />\n      <Content>\n        <h1>Blog</h1>\n        {data.allMarkdownRemark.edges.map(({ node }) => (\n          <div key={node.id} style={outlineStyle} >\n            <Link\n              to={node.frontmatter.path}\n              css={css`\n                text-decoration: none;\n                color: inherit;\n              `}>\n              <MarkerHeader>{node.frontmatter.title} </MarkerHeader>\n              <div>\n                <ArticleDate>{node.frontmatter.date}</ArticleDate>\n                <ReadingTime> - {node.fields.readingTime.text}</ReadingTime>\n              </div>\n              <p>Using: <i>{node.frontmatter.description}</i></p>\n            </Link>\n          </div>\n        ))}\n      </Content>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n\nexport const query = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n            path\n            description\n          }\n          fields {\n            slug\n            readingTime {\n              text\n            }\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { Link } from \"gatsby\"\nimport styled from \"@emotion/styled\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Content = styled.div`\n  max-width: 860px;\n  padding: 1rem 1.0875rem;\n  font-size: 1.2rem;\n`\n\nconst NavLink = styled(Link)`\n  color: black;\n  margin-left: 15px;\n  text-decoration: none;\n  display: inline-block;\n  position: relative;\n\n  ::after {\n    content: \"\";\n    position: absolute;\n    width: 100%;\n    transform: scaleX(0);\n    height: 2px;\n    bottom: 0;\n    left: 0;\n    background-color: rgba(102, 102, 255, 0.8);\n    transform-origin: bottom right;\n    transition: transform 0.4s cubic-bezier(0.86, 0, 0.07, 1);\n  }\n\n  :hover::after {\n    transform: scaleX(1);\n    transform-origin: bottom left;\n  }\n`\n\nconst HomeLink = styled(NavLink)`\n  margin-left: 0;\n`\n\nconst SiteHeader = styled.header`\n  background: transparent;\n  display: flex;\n  align-content: center;\n  justify-content: center;\n`\n\nconst Header = ({ siteTitle }) => (\n  <SiteHeader>\n    <Content>\n      <p>\n        <HomeLink to=\"/\">Projects</HomeLink>\n        <NavLink to=\"/blog\">Blog</NavLink>\n        <NavLink to=\"/about\">About</NavLink>\n      </p>\n    </Content>\n  </SiteHeader>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport styled from \"@emotion/styled\"\nimport { SocialIcon } from 'react-social-icons';\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Content = styled.div`\n  margin: 0 auto;\n  max-width: 860px;\n  padding: 0 1.0875rem 1rem;\n  padding-top: 0;\n`\n\nconst Footer = styled.footer`\n  display: flex;\n  justify-content: center;\n  border-top: 3px solid   rgb(102, 102, 255);\n`\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <Content>\n          <main>{children}</main>\n          <Footer>\n            <SocialIcon url=\"https://www.linkedin.com/in/petersmurphy7/\" target=\"_blank\" fgColor=\"#6666ff\" bgColor=\"#ffffff\" />\n            <SocialIcon url=\"http://github.com/murphypone\" target=\"_blank\" fgColor=\"#6666ff\" bgColor=\"#ffffff\" />\n            <SocialIcon url=\"http://twitter.com/petersmurphy7\" target=\"_blank\" fgColor=\"#6666ff\" bgColor=\"#ffffff\" />\n            <SocialIcon url=\"http://instagram.com/petersmurphy7\" target=\"_blank\" fgColor=\"#6666ff\" bgColor=\"#ffffff\" />\n            <SocialIcon url=\"http://youtube.com/plotsmurphy\" target=\"_blank\" fgColor=\"#6666ff\" bgColor=\"#ffffff\" />\n          </ Footer>\n        </Content>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}